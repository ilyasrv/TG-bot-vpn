import telebot
from telebot import types

# –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '6574304289:AAHbp-YuG9efM7lV--d9nOFawwGERdRZhmg'

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å—Ç–µ–∫ –¥–∏–∞–ª–æ–≥–æ–≤)
user_states = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    if chat_id not in users:
        users[chat_id] = {"id": chat_id}
    display_start_menu(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—éff
def display_start_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buy_button = types.KeyboardButton("–ö—É–ø–∏—Ç—å VPN")
    profile_button = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    free_trial_button = types.KeyboardButton("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç")
    markup.add(buy_button, profile_button)
    markup.add(free_trial_button)
    bot.send_message(message.chat.id, "üëæ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –í–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç –∏ –ø–æ–º–æ—â–Ω–∏–∫ MaskVPN!\n \n–Ø –ø–æ–º–æ–≥–∞—é c –æ–±—Ö–æ–¥–æ–º –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –∑–∞—â–∏—Ç–æ–π –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
def display_profile(message):
    chat_id = message.chat.id
    if chat_id not in users:
        users[chat_id] = {"id": chat_id}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    profile_button = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    markup.add(profile_button)
    bot.send_message(message.chat.id, f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å (ID: {users[chat_id]['id']}):", reply_markup=markup)
    bot.send_message(message.chat.id, "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ:", 
                     reply_markup=types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")))
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ö—É–ø–∏—Ç—å –∏ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç
    display_start_menu(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü—Ä–æ—Ñ–∏–ª—å"
@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Ñ–∏–ª—å")
def profile(message):
    display_profile(message)



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ö—É–ø–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == "–ö—É–ø–∏—Ç—å VPN")
def buy(message):
    markup = types.InlineKeyboardMarkup()

    tariffs = [
        {"months": 1, "price": 250},
        {"months": 3, "price": 600},
        {"months": 6, "price": 1000},
        {"months": 12, "price": 1800}
    ]

    for tariff in tariffs:
        button_text = f"{tariff['months']} –º–µ—Å—è—Ü{'–∞' if tariff['months'] != 1 else ''}\n{tariff['price']} ‚ÇΩ"
        button = types.InlineKeyboardButton(button_text, callback_data=f"buy_{tariff['months']}_{tariff['price']}")
        markup.add(button)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ: \n\n\n\n–ö –æ–ø–ª–∞—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∫–∞—Ä—Ç—ã –†–§: Visa, MasterCard, –ú–ò–†." , reply_markup=markup, parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã –∏ —Ç–∞—Ä–∏—Ñ–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    chat_id = call.message.chat.id
    user_id = call.from_user.id

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
    if call.data.startswith('buy_'):
        data = call.data.split('_')
        if len(data) == 3:
            months = int(data[1])
            price = int(data[2])
       
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
            payment_markup = types.InlineKeyboardMarkup(row_width=4)
            payment_markup.add(types.InlineKeyboardButton("–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞", callback_data=f"payment_card_{months}_{price}"),
                               types.InlineKeyboardButton("BTC", callback_data=f"payment_btc_{months}_{price}"),
                               types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=f"back"))
            bot.send_message(chat_id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ –Ω–∞ <b>{months}</b> –º–µ—Å—è—Ü{'–∞' if months == 1 else '–µ–≤'}.\n–°—Ç–æ–∏–º–æ—Å—Ç—å - <b>{price} —Ä—É–±–ª–µ–π</b>.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", reply_markup=payment_markup, parse_mode='HTML')

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
    elif call.data.startswith('payment_'):
        data = call.data.split('_')
        if len(data) == 4:
            payment_method = data[1]
            months = int(data[2])
            price = int(data[3])
            if payment_method == "card":
                # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π
                bot.send_message(chat_id, f"–ü–æ–∫—É–ø–∫–∞ –Ω–∞ {months} –º–µ—Å—è—Ü–µ–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω–∞! –û–ø–ª–∞—á–µ–Ω–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π.")
            elif payment_method == "btc":
                # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ BTC
                bot.send_message(chat_id, f"–ü–æ–∫—É–ø–∫–∞ –Ω–∞ {months} –º–µ—Å—è—Ü–µ–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω–∞! –û–ø–ª–∞—á–µ–Ω–æ —á–µ—Ä–µ–∑ BTC.")

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            elif call.data == "back":
                buy(call.message)
                
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç"
@bot.message_handler(func=lambda message: message.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç")
def free_trial(message):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
    bot.reply_to(message, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º —Ç–µ—Å—Ç–æ–º VPN!")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()